version: '3.8'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: strapi
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    volumes:
      - db-data:/var/lib/postgresql/data
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - backend-node-modules:/app/node_modules
    command: sh -c "npm install && npm run develop"
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      DATABASE_SSL: 'false'
      APP_KEYS: change_me
      ADMIN_JWT_SECRET: changeme
      JWT_SECRET: ${JWT_SECRET}
      API_TOKEN_SALT: KUNIpgntw/t3kgRAQfCN0w==
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      CLIENT_URL: http://localhost:3000
      PREVIEW_SECRET: someRandomPreviewSecret
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      VIDEO_CALL_PROVIDER_KEY: ${VIDEO_CALL_PROVIDER_KEY}
    ports:
      - '1337:1337'
    depends_on:
      - db
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - frontend-node-modules:/app/node_modules
    # Install dependencies on the first run because the node_modules
    # volume overrides the image's files.
    command: sh -c "npm install && npm run dev"
    environment:
      BACKEND_URL: http://backend:1337
      ALLOWED_DEV_ORIGIN: ${ALLOWED_DEV_ORIGIN}
      NEXT_PUBLIC_STRIPE_PUBLIC_KEY: ${NEXT_PUBLIC_STRIPE_PUBLIC_KEY}
      REACT_EDITOR: ${REACT_EDITOR}
      NEXT_PUBLIC_DISABLE_CRAFTJS: ${NEXT_PUBLIC_DISABLE_CRAFTJS}
    ports:
      - '3000:3000'
    depends_on:
      - backend
volumes:
  db-data:
  backend-node-modules:
  frontend-node-modules:
